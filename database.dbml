Project SocialMedia {
  database_type: "postgresql"
  author: "Gabriel Michael Ojomakpene (codewitgabi)"
  email: "codewitgabi222@gmail.com"
  contact: "+2349020617734"
  portfolio: "https:codewitgabi.vercel.app"
}

// enums

Enum roles {
  user
  admin
}

Enum message_status {
  read
  unread
}

// user

Table User {
  id uuid [not null, pk, unique]
  username char [not null]
  email char [not null, unique]
  password text [not null]
  role roles [null, default: "user"]
  bio text [null]
  contact_info text [null]
  social_links char[] [null]
  followers User[] [ref: <> User.id]
  followings User[] [ref: <> User.id]
  last_login datetime [null]
  created_at datetime [not null, default: `now()`]
  updated_at datetime [not null, default: `now()`]
}

// profile picture

Table ProfilePicture {
  id uuid [not null, pk, unique]
  user_id uuid [not null, ref: > User.id]
  image url [not null]
  created_at datetime [not null, default: `now()`]
  updated_at datetime [not null, default: `now()`]
}

// profile picture

Table CoverPhoto {
  id uuid [not null, pk]
  user_id uuid [not null, ref: > User.id]
  image url [not null]
  created_at datetime [not null, default: `now()`]
  updated_at datetime [not null, default: `now()`]
}

// post

Table Post {
  id uuid [not null, pk, unique]
  user_id uuid [not null, ref: > User.id]
  content text [null]
  image url [null]
  video url [null]
  created_at datetime [not null, default: `now()`]
  updated_at datetime [not null, default: `now()`]
}

// post comments

Table PostComment {
  id uuid [not null, pk, unique]
  post_id uuid [not null, ref: > Post.id]
  comment text
  created_at datetime [not null, default: `now()`]
  updated_at datetime [not null, default: `now()`]
}

// notification


Table Notification {
  id uuid [not null, pk, unique]
  created_at timestamp [not null]
  status message_status [null, default: "unread"]
  user_id uuid [not null, ref: > User.id]
  message text [not null]
}

// notification settings 

Table NotificationSetting {
  id uuid [not null, pk, unique]
  user_id uuid [not null, ref: - User.id]
  enable bool [not null, default: false]
  keywords tinytext[] [note: "Keywords to notify a user about when used within the application"]
  created_at datetime [not null, default: `now()`]
}


Table Message {
  id uuid [not null, pk, unique]
  message text [not null]
  sender_id uuid [not null, ref: > User.id]
  receiver_id uuid [not null, ref: > User.id]
  created_at timestamp
}

Table PostReaction {
  id uuid [not null, pk, increment]
  post_id uuid [not null, unique, ref: > Post.id]
  user_id uuid [not null, unique, ref: > User.id]
  comment_id uuid [null, unique, ref: > User.id]
  created_at timestamp
}

// access tokens

Table AccessToken {
  id uuid [not null, pk, unique]
  token char [not null, unique]
  user_id uuid [not null, ref: > User.id]
  expiry_time datetime [not null]
  created_at datetime [not null, default: `now()`]
}

// blacklist tokens

Table TokenBlacklist {
  id uuid [not null, pk, unique]
  access_token char [not null, unique]
}

Table Hashtag {
  id uuid [not null, pk, unique]
  tag char [not null, unique]
  usage int [not null, default: 1, note: "updated based on the number of times it is used"]
}
